import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

// 몬스터와 플레이어의 부모클래스
class Creature {
	ArrayList<String> item = new ArrayList<>();
	String name, weapon;
	int hp, power, speed;

	// 상대를 공격하는 메소드
	public static void attack(Creature A, Creature B) {
		B.hp -= A.power;
	}

}

//적 객체를 만들기 위한 클래스
class Enamy extends Creature {
	// 생성자
	public Enamy(String name, int hp, int power, int speed) {
		this.name = name;
		this.hp = hp;
		this.power = power;
		this.speed = speed;
	}
}

//플레이어 객체를 만들기 위한 클래스
class Player extends Creature {
	public Player() {
		this.hp = 200;
	}
}

//이미지의 크기를 조절하는 코드
class ChangeImage {
	static ImageIcon change(String address, int x, int y) {
		ImageIcon sample = new ImageIcon(address);
		Image changeImg = sample.getImage().getScaledInstance(x, y, Image.SCALE_SMOOTH);
		ImageIcon result = new ImageIcon(changeImg);
		return result;
	}
}

class Mygame extends JFrame {
	ArrayList<Creature> monster = new ArrayList<>();

	Creature pl = new Player();// 플레이어 생성

	private Container cPane = getContentPane();
	private CardLayout layoutm = new CardLayout();

	JPanel page1 = new JPanel();// 초기 화면 패널
	JPanel page2 = new JPanel();// 게임 시작 스토리 패널
	JPanel page3 = new JPanel();// 조작법 패널
	JPanel page4 = new JPanel();// 게임 커스텀 패널
	JPanel page5 = new JPanel();// 게임 시작 패널
	JPanel page6 = new JPanel();// 게임 전장 패널
	JPanel page7 = new JPanel();// 게임 오버 패널
	JPanel page8 = new JPanel();// 게임 엔딩 패널

	JComboBox item = new JComboBox();// 아이템 사용 콤보박스
	JLabel firstBackground = new JLabel();// 게임의 첫 배경
	JLabel title = new JLabel("Forest");// 게임제목
	Font font01 = new Font("Monaco", Font.ITALIC, 40);
	Font font02 = new Font("Monaco", Font.ITALIC, 30);
	Font font03 = new Font("바탕", Font.BOLD, 15);
	Font font04 = new Font("Monaco", Font.BOLD, 20);
	Font keyBoardfont = new Font("나눔글꼴", Font.BOLD, 38);
	Font storyFont = new Font("Monaco", Font.BOLD, 30);
	JLabel subTitle = new JLabel("We need Warrior...");// 게임부제
	JLabel myInfo = new JLabel("20214104 최태성 JAVA RPG GAME Project");// 내 정보
	JButton manualButton = new JButton("|MANUAL|");// 조작법 버튼
	JButton exitButton = new JButton("|EXIT|");// 게임 종료버튼
	JLabel storyBackground = new JLabel();// 스토리 페이지의 배경
	JLabel story = new JLabel("[STORY]");// 스토리의 상단
	JButton storyPageNext = new JButton("|NEXT|");// 스토리 페이지의 다음 버튼
	JButton storyPageBack = new JButton("|BACK|");// 스토리 페이지의 이전 버튼
	JLabel keyBoardBackground = new JLabel();// 조작법 페이지의 배경
	JButton backKeyboard = new JButton("|BACK|");// 조작법 페이지의 이전 버튼
	JLabel characterCustomBackground = new JLabel();// 게임 커스텀 페이지의 배경
	JLabel character = new JLabel();// 게임 커스텀 페이지의 캐릭터 이미지
	JLabel nameLabel = new JLabel("NAME ");// 게임 커스텀 페이지의 이름 라벨
	JTextField nameText = new JTextField(60);// 게임 커스텀 페이지의 이름 적는 칸
	JLabel weaponLabel = new JLabel("Weapon");// 게임 커스텀 페이지의 무기 라벨
	JComboBox weaponSelect = new JComboBox();// 게임 커스텀 페이지의 무기 고르는 콤보박스
	JLabel itemLabel = new JLabel("First Item");// 게임 커스텀 페이지의 아이템 라벨
	JComboBox itemChoice = new JComboBox();// 게임 커스텀 페이지의 아이템 고르는 콤보박스
	JButton gameStartButton = new JButton("|START|");// 게임 커스텀 페이지의 시작버튼
	JLabel gameBackground = new JLabel();// 게임 시작 페이지의 배경
	JLabel characterIngame = new JLabel();// 게임 시작 페이지의 캐릭터 이미지 라벨
	JLabel door01 = new JLabel();// 게임 시작 페이지의 포탈문
	JLabel door02 = new JLabel();
	JLabel door03 = new JLabel();
	JLabel fieldBackground = new JLabel();// 게임 전장 페이지의 배경
	JLabel enamy = new JLabel();// 게임 전장 페이지의 적
	JLabel player = new JLabel();// 게임 전장 페이지의 플레이어
	JTextField enamyHpBackground = new JTextField(100);// 게임 전장 페이지의 적의 체력
	JTextField enamyHp = new JTextField(100);
	JTextField playerHpBackground = new JTextField(100);// 게임 전장 페이지의 플레이어의 체력
	JTextField playerHp = new JTextField(100);
	JButton nextButton = new JButton("|NEXT|");// 게임 전장 페이지의 다음 버튼
	JButton attackButton = new JButton("|ATTACK|");// 게임 전장 페이지의 공격 버튼

	int x = 0; // 플레이어의 x좌표
	int y = 153;// 플레이어의 y좌표
	int storyCount = 0;
	int change = 0;
	boolean stageClear = true; // 스테이지를 클리어 했는지 여부
	int clear = 0; // 죽인 몬스터 개수

	boolean direction = true;

	boolean checkSlime = true;
	boolean checkGoblin = true;
	boolean checkScorpion = true;
	int monsterCount = 0;

	public Mygame() {
		monster.add(new Enamy("Slime", 200, 10, 0));
		monster.add(new Enamy("Goblin", 200, 20, 1));
		monster.add(new Enamy("Scorpion", 200, 20, 2));

		setLayout(layoutm);

		/*--------------------------------------------------------------------------------------------------------------------------------------*/

		// 초기화면 페이지
		page1.setLayout(null);

		// 배경 설정
		firstBackground.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/게임 첫 배경.png", 1000, 600));

		// 게임 제목 설정
		title.setForeground(Color.DARK_GRAY);
		title.setFont(font01);

		// 게임 부제 설정
		subTitle.setForeground(Color.WHITE);
		subTitle.setFont(font02);

		// 나의 정보 설정
		myInfo.setForeground(Color.WHITE);
		myInfo.setFont(font03);

		// 시작 버튼
		JButton startButton = new JButton("|START|");
		startButton.setFont(font04);
		startButton.addActionListener(e -> {
			layoutm.next(cPane);
			layoutm.next(cPane);
		});

		// 조작법 버튼
		manualButton.setFont(font04);
		manualButton.addActionListener(e -> layoutm.next(cPane));

		// 종료 버튼
		exitButton.addActionListener(e -> System.exit(1));
		exitButton.setFont(font04);

		// 화면에 추가
		page1.add(title);// 제목
		title.setBounds(400, 180, 150, 50);

		page1.add(subTitle);// 부제
		subTitle.setBounds(335, 260, 500, 30);

		page1.add(myInfo);// 나의 정보
		myInfo.setBounds(30, 20, 350, 20);

		page1.add(startButton);// 시작 버튼
		startButton.setBounds(250, 400, 100, 50);

		page1.add(manualButton);// 조작법 버튼
		manualButton.setBounds(430, 400, 110, 50);

		page1.add(exitButton);// 나가기 버튼
		exitButton.setBounds(610, 400, 100, 50);

		page1.add(firstBackground);// 배경
		firstBackground.setBounds(0, 0, 1000, 600);

		/*--------------------------------------------------------------------------------------------------------------------------------------*/

		// 게임시작스토리 페이지
		page2.setLayout(null);

		// 게임시작스토리 페이지 배경
		storyBackground.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/게임 시작.png", 1000, 600));

		// 스토리 라벨 설정
		story.setForeground(Color.WHITE);
		story.setFont(storyFont);
		ArrayList<JLabel> storyLabel = new ArrayList<>();
		storyLabel.add(new JLabel("조용한 어느 마을..."));
		storyLabel.add(new JLabel("마을에는 어두운 힘이 잠들어 있는 숲이 있었다."));
		storyLabel.add(new JLabel("그러던 어느 날, 그 힘이 깨어났고..."));
		storyLabel.add(new JLabel("마을은 위험에 빠지게 되었다..."));
		storyLabel.add(new JLabel("어느날, 용감한 모험가가 숲속으로 떠나게 되는데..."));
		storyLabel.add(new JLabel("시작하려면 다음을 누르세요."));

		for (int i = 0; i < storyLabel.size(); i++) {
			storyLabel.get(i).setForeground(Color.WHITE);
			storyLabel.get(i).setFont(storyFont);
			page2.add(storyLabel.get(i));
			storyLabel.get(i).setVisible(false);

		}

		// 다음 버튼
		storyPageNext.setFont(font04);
		storyPageNext.addActionListener(e -> {
			if (storyCount < storyLabel.size())
				storyLabel.get(storyCount++).setVisible(true);
			else {
				layoutm.next(cPane);
			}
		});

		// 이전 버튼
		storyPageBack.setFont(font04);
		storyPageBack.addActionListener(e -> {
			storyCount = 0;
			for (int i = 0; i < storyLabel.size(); i++)
				storyLabel.get(i).setVisible(false);
			layoutm.first(cPane);
		});
		// 화면에 추가
		page2.add(story);// 스토리
		story.setBounds(450, -90, 600, 400);
		storyLabel.get(0).setBounds(400, -50, 600, 400);
		storyLabel.get(1).setBounds(230, -20, 800, 400);
		storyLabel.get(2).setBounds(280, 10, 800, 400);
		storyLabel.get(3).setBounds(320, 40, 800, 400);
		storyLabel.get(4).setBounds(220, 70, 800, 400);
		storyLabel.get(5).setBounds(360, 130, 800, 400);

		page2.add(storyPageNext);// 다음 버튼
		storyPageNext.setBounds(600, 360, 90, 70);

		page2.add(storyPageBack);// 이전 버튼
		storyPageBack.setBounds(300, 360, 90, 70);

		page2.add(storyBackground);// 배경
		storyBackground.setBounds(0, 0, 1000, 600);

		/*--------------------------------------------------------------------------------------------------------------------------------------*/

		// 조작법 페이지
		page3.setBackground(Color.BLACK);
		page3.setLayout(null);

		// 배경 설정
		keyBoardBackground.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/조작법 배경.png", 1000, 600));

		// 조작법 레이블
		ArrayList<JLabel> keyBoardLabel = new ArrayList<>();
		keyBoardLabel.add(new JLabel("왼쪽으로 이동: a"));
		keyBoardLabel.add(new JLabel("위쪽으로 이동: w"));
		keyBoardLabel.add(new JLabel("오른쪽으로 이동: d"));
		keyBoardLabel.add(new JLabel("아래쪽으로 이동: s"));
		keyBoardLabel.add(new JLabel("그 외: 마우스 클릭"));
		for (int i = 0; i < keyBoardLabel.size(); i++) {
			keyBoardLabel.get(i).setForeground(Color.WHITE);
			keyBoardLabel.get(i).setFont(keyBoardfont);
			page3.add(keyBoardLabel.get(i));
		}

		// 이전 버튼
		backKeyboard.setFont(font04);
		backKeyboard.addActionListener(e -> layoutm.first(cPane));

		// 화면에 추가

		keyBoardLabel.get(0).setBounds(300, 10, 400, 200);// 조작법
		keyBoardLabel.get(1).setBounds(300, 50, 400, 200);
		keyBoardLabel.get(2).setBounds(300, 90, 400, 200);
		keyBoardLabel.get(3).setBounds(300, 130, 400, 200);
		keyBoardLabel.get(4).setBounds(300, 170, 400, 200);

		page3.add(backKeyboard);// 이전
		backKeyboard.setBounds(200, 360, 90, 70);

		page3.add(keyBoardBackground);// 배경
		keyBoardBackground.setBounds(0, 0, 1000, 600);

		/*--------------------------------------------------------------------------------------------------------------------------------------*/

		// 게임 커스텀 페이지
		page4.setBackground(Color.GRAY);
		page4.setLayout(null);

		// 배경 설정
		characterCustomBackground
				.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/캐릭터 커스텀 배경.png", 1000, 600));

		// 캐릭터 이미지
		character.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/캐릭터 정면.png", 150, 200));

		// 이름 설정 코드
		nameLabel.setForeground(Color.WHITE);
		nameLabel.setFont(new Font("Monaco", Font.BOLD, 30));
		nameText.setFont(new Font("나눔글꼴", Font.BOLD, 30));

		// 무기 설정 코드
		weaponLabel.setFont(new Font("Monaco", Font.BOLD, 50));
		weaponLabel.setForeground(Color.RED);
		weaponSelect.addItem("맨손(스피드: 1, 공격력: 10)");
		weaponSelect.addItem("단검(스피드: 2, 공격력: 20)");
		weaponSelect.addItem("도끼(스피드: 3, 공격력: 30)");
		weaponSelect.setFont(new Font("나눔글꼴", Font.BOLD, 20));

		// 초기 아이템 선택 코드
		itemLabel.setFont(new Font("Monaco", Font.BOLD, 30));
		itemLabel.setForeground(Color.RED);
		itemChoice.addItem("회복 물약");
		itemChoice.addItem("스피드 물약");
		itemChoice.addItem("파워 물약");
		item.addItem(itemChoice.getSelectedItem());
		itemChoice.setFont(new Font("나눔글꼴", Font.BOLD, 20));

		// 시작 버튼
		gameStartButton.setFont(font04);
		gameStartButton.addActionListener(e -> {
			pl.name = nameText.getText();
			pl.item.add((String) itemChoice.getSelectedItem());
			pl.weapon = (String) weaponSelect.getSelectedItem();
			String a = "맨손(스피드: 1, 공격력: 10)";
			String b = "단검(스피드: 2, 공격력: 20)";
			if (pl.weapon.equals(a)) {
				pl.power = 10;
				pl.speed = 1;
			} else if (pl.weapon.equals(b)) {
				pl.power = 20;
				pl.speed = 2;
			} else {
				pl.power = 30;
				pl.speed = 3;
			}

			layoutm.next(cPane);

			page5.setFocusable(true);
			page5.requestFocus();

		});

		// 화면에 추가
		page4.add(character);// 캐릭터
		character.setBounds(130, 170, 150, 200);

		page4.add(nameLabel);// 이름
		nameLabel.setBounds(100, 440, 300, 40);

		page4.add(nameText);// 이름 텍스트박스
		nameText.setBounds(180, 445, 110, 30);

		page4.add(weaponLabel);// 무기
		weaponLabel.setBounds(620, 120, 200, 50);

		page4.add(weaponSelect);// 무기 초이스
		weaponSelect.setBounds(620, 170, 270, 40);

		page4.add(itemLabel);// 아이템
		itemLabel.setBounds(620, 220, 300, 50);

		page4.add(itemChoice);// 아이템 초이스
		itemChoice.setBounds(620, 270, 270, 20);

		page4.add(gameStartButton);// 게임 시작 버튼
		gameStartButton.setBounds(800, 460, 100, 50);

		page4.add(characterCustomBackground);// 배경
		characterCustomBackground.setBounds(0, 0, 1000, 600);

		/*--------------------------------------------------------------------------------------------------------------------------------------*/

		// 게임 시작 페이지
		page5.setLayout(null);

		// 배경 설정
		gameBackground.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/게임 배경.png", 1000, 600));

		// 캐릭터 설정
		characterIngame.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/캐릭터 정면.png", 60, 100));

		// 차원문 이미지
		door01.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/포탈.png", 60, 100));
		door02.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/포탈.png", 60, 100));
		door03.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/포탈.png", 60, 100));

		// 키 리스너 설정
		page5.addKeyListener(new KeyListener() {
			@Override
			public void keyPressed(KeyEvent e) {
				// 슬라임이 살아 있을 경우
				if (checkSlime == true) {
					if ((characterIngame.getX() >= door01.getX() && characterIngame.getX() <= door01.getX() + 60
							&& characterIngame.getY() >= door01.getY() && characterIngame.getY() <= door01.getY() + 100)
							|| (characterIngame.getX() + 60 >= door01.getX()
									&& characterIngame.getX() + 60 <= door01.getX() + 60
									&& characterIngame.getY() + 60 >= door01.getY()
									&& characterIngame.getY() + 60 <= door01.getY() + 100)) {
						monsterCount = 0;
						enamy.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/슬라임.png", 200, 160));
						layoutm.next(cPane);
					}
				}
				// 고블린이 살아 있을 경우
				if (checkGoblin == true) {
					if ((characterIngame.getX() >= door02.getX() && characterIngame.getX() <= door02.getX() + 60
							&& characterIngame.getY() >= door02.getY() && characterIngame.getY() <= door02.getY() + 100)
							|| (characterIngame.getX() + 60 >= door02.getX()
									&& characterIngame.getX() + 60 <= door02.getX() + 60
									&& characterIngame.getY() + 60 >= door02.getY()
									&& characterIngame.getY() + 60 <= door02.getY() + 100)) {

						monsterCount = 1;
						enamy.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/고블린.png", 200, 160));
						layoutm.next(cPane);
					}
				}
				// 스콜피온이 살아 있을 경우
				if (checkScorpion == true) {
					if ((characterIngame.getX() >= door03.getX() && characterIngame.getX() <= door03.getX() + 60
							&& characterIngame.getY() >= door03.getY() && characterIngame.getY() <= door03.getY() + 100)
							|| (characterIngame.getX() + 60 >= door03.getX()
									&& characterIngame.getX() + 60 <= door03.getX() + 60
									&& characterIngame.getY() + 60 >= door03.getY()
									&& characterIngame.getY() + 60 <= door03.getY() + 100)) {

						monsterCount = 2;
						layoutm.next(cPane);
						enamy.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/스콜피온.png", 200, 160));
					}
				}
				switch (e.getKeyChar()) {
				case 'w':
					// 만약 캐릭터가 길 위에 있을 때
					if ((characterIngame.getX() >= 0 && characterIngame.getX() + 60 <= 1000
							&& characterIngame.getY() + 90 - 10 >= 153)
							|| (characterIngame.getX() >= 413 && characterIngame.getX() + 60 <= 644
									&& characterIngame.getY() - 10 >= 0)) {
						// 캐릭터가 오른쪽을 바라보고 있을 때
						if (direction == true) {
							if (change % 5 == 0) {
								characterIngame.setIcon(ChangeImage
										.change("/Users/taesung_choi/GUI_Project/캐릭터 오른쪽 이동 01.png", 60, 100));
								change++;
							} else {
								characterIngame.setIcon(ChangeImage
										.change("/Users/taesung_choi/GUI_Project/캐릭터 오른쪽 이동 02.png", 60, 100));
								change++;
							}
						}
						// 캐릭터가 왼쪽을 바라보고 있을 때
						else {
							if (change % 5 == 0) {
								characterIngame.setIcon(ChangeImage
										.change("/Users/taesung_choi/GUI_Project/캐릭터 왼쪽 이동 01.png", 60, 100));
								change++;
							} else {
								characterIngame.setIcon(ChangeImage
										.change("/Users/taesung_choi/GUI_Project/캐릭터 왼쪽 이동 02.png", 60, 100));
								change++;
							}
						}
						y -= 10;
					}
					break;
				case 's':
					// 캐릭터가 길 위에 있을 때
					if ((characterIngame.getX() >= 0 && characterIngame.getX() + 60 <= 1000
							&& characterIngame.getY() + 100 + 10 <= 331)
							|| (characterIngame.getX() >= 413 && characterIngame.getX() + 60 <= 644
									&& characterIngame.getX() >= 413 && characterIngame.getY() + 100 + 10 <= 600)) {
						// 캐릭터가 오른쪽을 바라보고 있을 때
						if (direction == true) {
							if (change % 5 == 0) {
								characterIngame.setIcon(ChangeImage
										.change("/Users/taesung_choi/GUI_Project/캐릭터 오른쪽 이동 01.png", 60, 100));
								change++;
							} else {
								characterIngame.setIcon(ChangeImage
										.change("/Users/taesung_choi/GUI_Project/캐릭터 오른쪽 이동 02.png", 60, 100));
								change++;
							}
						}
						// 캐릭터가 왼쪽을 바라보고 있을 때
						else {
							if (change % 5 == 0) {
								characterIngame.setIcon(ChangeImage
										.change("/Users/taesung_choi/GUI_Project/캐릭터 왼쪽 이동 01.png", 60, 100));
								change++;
							} else {
								characterIngame.setIcon(ChangeImage
										.change("/Users/taesung_choi/GUI_Project/캐릭터 왼쪽 이동 02.png", 60, 100));
								change++;
							}
						}
						y += 10;
					}
					break;
				case 'a':
					// 캐릭터가 길 위에 있을 때
					if ((characterIngame.getY() + 90 >= 153 && characterIngame.getY() + 100 <= 331
							&& characterIngame.getX() - 10 >= 0)
							|| (characterIngame.getY() >= 0 && characterIngame.getY() + 100 <= 600
									&& characterIngame.getX() - 10 >= 419)) {
						if (change % 5 == 0) {
							characterIngame.setIcon(
									ChangeImage.change("/Users/taesung_choi/GUI_Project/캐릭터 왼쪽 이동 01.png", 60, 100));
							change++;
						} else {
							characterIngame.setIcon(
									ChangeImage.change("/Users/taesung_choi/GUI_Project/캐릭터 왼쪽 이동 02.png", 60, 100));
							change++;
						}
						direction = false;
						x -= 10;
					}
					break;
				case 'd':
					// 캐릭터가 길 위에 있을 때
					if ((characterIngame.getY() + 90 >= 153 && characterIngame.getY() + 100 <= 331
							&& characterIngame.getX() + 60 + 10 <= 1000)
							|| (characterIngame.getY() >= 0 && characterIngame.getY() + 100 <= 600
									&& characterIngame.getX() + 60 + 10 <= 644)) {
						if (change % 5 == 0) {
							characterIngame.setIcon(
									ChangeImage.change("/Users/taesung_choi/GUI_Project/캐릭터 오른쪽 이동 01.png", 60, 100));
							change++;
						} else {
							characterIngame.setIcon(
									ChangeImage.change("/Users/taesung_choi/GUI_Project/캐릭터 오른쪽 이동 02.png", 60, 100));
							change++;
						}
						direction = true;
						x += 10;
					}
					break;
				}
				characterIngame.setLocation(x, y);

			}

			@Override
			public void keyTyped(KeyEvent e) {
			}

			@Override
			public void keyReleased(KeyEvent e) {
				characterIngame.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/캐릭터 정면.png", 60, 100));
			}

		});

		// 화면에 추가
		page5.add(characterIngame);// 캐릭터;
		characterIngame.setBounds(x, y, 60, 100);

		page5.add(door01);// 포털
		door01.setBounds(500, 20, 60, 100);
		page5.add(door02);
		door02.setBounds(900, 180, 60, 100);
		page5.add(door03);
		door03.setBounds(500, 450, 60, 100);

		page5.add(gameBackground);// 배경
		gameBackground.setBounds(0, 0, 1000, 600);

		/*--------------------------------------------------------------------------------------------------------------------------------------*/

		// 게임 전장 페이지
		page6.setLayout(null);

		// 배경 생성
		fieldBackground.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/게임 전장.png", 1000, 600));

		// 적 이미지
		enamy.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/슬라임.png", 200, 160));

		// 플레이어 이미지
		player.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/캐릭터 정면.png", 120, 200));

		// 체력
		enamyHp.setBackground(Color.RED);

		playerHp.setBackground(Color.RED);

		// 진행상태 페이지
		JPanel textBackground = new JPanel();
		textBackground.setBackground(Color.GRAY);
		JLabel textLabel = new JLabel();
		textLabel.setFont(new Font("굴림", Font.BOLD, 30));
		textBackground.add(textLabel);

		// 아이템 버튼
		JButton itemButton = new JButton("|ITEM|");
		JButton itemNext = new JButton("|NEXT|");
		JButton itemCancle = new JButton("|CANCLE|");
		JPanel itemPopUp = new JPanel();
		JPanel itemPopUpSub = new JPanel();
		itemPopUpSub.setLayout(new GridLayout(1, 2));
		itemPopUpSub.add(itemNext);
		itemPopUpSub.add(itemCancle);
		itemPopUp.setVisible(false);
		itemPopUp.setLayout(new GridLayout(0, 1));
		itemButton.addActionListener(e -> {
			itemPopUp.add(item);
			itemPopUp.add(itemPopUpSub);
			itemNext.setSize(50, 50);
			itemPopUp.setVisible(true);
		});
		itemNext.addActionListener(e -> {
			switch ((String) item.getSelectedItem()) {
			case "회복 물약":
				pl.hp += 30;
				playerHp.setBounds(100, 400, pl.hp, 25);
				break;
			case "스피드 물약":
				pl.speed += 1;
				break;
			case "파워 물약":
				pl.power += 10;
				break;
			}
			textLabel.setText((String) item.getSelectedItem() + "을 사용했습니다.");
			item.removeItem((String) item.getSelectedItem());
			itemPopUp.setVisible(false);
		});
		itemCancle.addActionListener(e -> {
			itemPopUp.setVisible(false);
			textLabel.setText("취소했습니다.");
		});

		// 다음 버튼
		nextButton.addActionListener(e -> {
			textLabel.setText("");

			if (stageClear == true) {
				String plusItem = (String) itemChoice.getItemAt((int) ((Math.random() * 3) % 3));
				item.addItem(plusItem);
				textLabel.setText(plusItem + "을 얻었습니다");
				stageClear = false;
			} else {
				if (monster.get(monsterCount).hp <= 0) {
					clear++;

					switch (monster.get(monsterCount).name) {
					case "Slime":
						checkSlime = false;
						door01.setVisible(false);
						break;
					case "Goblin":
						checkGoblin = false;
						door02.setVisible(false);
						break;
					case "Scorpion":
						checkScorpion = false;
						door03.setVisible(false);
						break;
					}
					enamyHp.setBounds(700, 400, 200, 25);
					stageClear = true;
					nextButton.setVisible(false);
					if (clear == 3) {
						layoutm.last(cPane);
					} else {
						layoutm.previous(cPane);
						page5.setFocusable(true);
						page5.requestFocus();
					}

				} else {
					layoutm.next(cPane);
				}
			}

		});

		// 공격 버튼
		attackButton.addActionListener(e -> {
			// 플레이어와 적 중 스피드가 더 빠른 쪽이 먼저 공격, 둘 중 하나라도 먼저 체력이 0 이하라면 게임을 종료
			if (pl.speed > monster.get(monsterCount).speed) {
				if ((int) ((Math.random() + 1) * 10) % 3 == 0) {
					int tmp = pl.power;
					int critical = pl.power * 2;
					pl.power = critical;
					Creature.attack(pl, monster.get(monsterCount));
					pl.power = tmp;
					textLabel.setText(pl.name + "이(가) " + monster.get(monsterCount).name + "의 급소를 공격했습니다.");
				} else {
					Creature.attack(pl, monster.get(monsterCount));
					textLabel.setText(pl.name + "이(가) " + monster.get(monsterCount).name + "을(를) 공격했습니다.");
				}
				enamyHp.setSize(monster.get(monsterCount).hp, 25);
				if (monster.get(monsterCount).hp <= 0) {
					textLabel.setText(monster.get(monsterCount).name + "이(가) 쓰러졌습니다.");
					nextButton.setVisible(true);
				} else {
					Creature.attack(monster.get(monsterCount), pl);
					textLabel.setText(
							textLabel.getText() + monster.get(monsterCount).name + "이(가) " + pl.name + "을(를) 공격했습니다.");
					playerHp.setSize(pl.hp, 25);
					if (pl.hp <= 0) {
						nextButton.setVisible(true);
						textLabel.setText(pl.name + "이(가) 쓰러졌습니다.");
					}
				}
			} else {
				Creature.attack(monster.get(monsterCount), pl);
				textLabel.setText(monster.get(monsterCount).name + "이(가) " + pl.name + "을(를) 공격했습니다.");
				playerHp.setSize(pl.hp, 25);
				if (pl.hp <= 0) {
					nextButton.setVisible(true);
					textLabel.setText(pl.name + "이(가) 쓰러졌습니다.");
				} else {
					if ((int) ((Math.random()) + 1 * 10) % 3 == 0) {
						int tmp = pl.power;
						int critical = pl.power * 2;
						pl.power = critical;
						Creature.attack(pl, monster.get(monsterCount));
						pl.power = tmp;
						textLabel.setText(pl.name + "이(가) " + monster.get(monsterCount).name + "의 급소를 공격했습니다.");
					} else {
						Creature.attack(pl, monster.get(monsterCount));
						textLabel.setText(pl.name + "이(가) " + monster.get(monsterCount).name + "을(를) 공격했습니다.");
					}
					enamyHp.setSize(monster.get(monsterCount).hp, 25);
					if (monster.get(monsterCount).hp <= 0) {
						nextButton.setVisible(true);
						textLabel.setText(monster.get(monsterCount).name + "이(가) 쓰러졌습니다.");
					}
				}
			}
		});
		// 화면에 추가

		page6.add(textBackground);
		textBackground.setBounds(0, 0, 1000, 50);

		page6.add(enamy);// 적
		enamy.setBounds(700, 200, 200, 160);

		page6.add(player);// 플레이어
		player.setBounds(120, 200, 120, 200);

		page6.add(enamyHp);// 적 HP
		enamyHp.setBounds(700, 400, 200, 25);
		page6.add(enamyHpBackground);
		enamyHpBackground.setBounds(700, 400, 200, 25);

		page6.add(playerHp);// 플레이어 HP
		playerHp.setBounds(100, 400, pl.hp, 25);
		page6.add(playerHpBackground);
		playerHpBackground.setBounds(100, 400, 200, 25);

		page6.add(attackButton);// 공격 버튼
		attackButton.setBounds(600, 500, 90, 70);

		page6.add(itemButton);// 아이템 버튼
		itemButton.setBounds(700, 500, 90, 70);

		page6.add(nextButton);// 다음 버튼
		nextButton.setBounds(800, 500, 90, 70);
		nextButton.setVisible(false);

		page6.add(itemPopUp);// 아이템 팝업창
		itemPopUp.setBounds(100, 450, 200, 100);

		page6.add(fieldBackground);// 배경
		fieldBackground.setBounds(0, 0, 1000, 600);

		/*--------------------------------------------------------------------------------------------------------------------------------------*/

		// 게임 오버 화면 이미지 설정
		JLabel gameOverImage = new JLabel();
		gameOverImage.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_Project/게임 오버.png", 1000, 600));

		// 화면에 추가
		page7.add(gameOverImage);

		/*--------------------------------------------------------------------------------------------------------------------------------------*/

		// 엔딩 화면 이미지 설정
		JLabel gameEndingImage = new JLabel();
		gameEndingImage.setIcon(ChangeImage.change("/Users/taesung_choi/GUI_project/엔딩 숲.png", 1000, 600));

		// 엔딩 글
		ArrayList<JLabel> endingStory = new ArrayList<>();
		endingStory.add(new JLabel("용사는 결국 슬라임, 고블린, 스콜피온을 다 쓰려뜨렸고,"));
		endingStory.add(new JLabel("어둠의 힘은 모두 사라졌다."));
		endingStory.add(new JLabel("그로인해 마을에는 평화가 찾아왔고,"));
		endingStory.add(new JLabel("사람들은 다시 평범한 일상을 되찾았다."));
		endingStory.add(new JLabel("끝..."));

		// 화면에 추가
		for (int i = 0; i < endingStory.size(); i++) {
			endingStory.get(i).setFont(storyFont);
			page8.add(endingStory.get(i));
		}
		page8.add(gameEndingImage);
		/*--------------------------------------------------------------------------------------------------------------------------------------*/

		add(page1);
		add(page3);
		add(page2);
		add(page4);
		add(page5);
		add(page6);
		add(page7);
		add(page8);

		setTitle("GAME");

		setSize(1000, 600);
		setLocation(500, 250);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setVisible(true);

	}

}

public class Game {
	public static void main(String[] main) {
		Mygame mg = new Mygame();
		// 이미지 링크
		// https://www.istockphoto.com/kr/search/2/image?mediatype=illustration&phrase=숲
		// https://kor.pngtree.com/freebackground/cartoon-game-cg-forest-landscape-scene_2448070.html
		// https://pixabay.com/ko/photos/하-수-별-밤하늘-2695569/
		// https://www.flaticon.com/kr/free-icon/gamepad_2072645
		// https://kr.freepik.com/free-vector/jungle-or-rainforest-landscape-tropical-forest_25694509.htm#query=숲%20게임%20배경&position=5&from_view=keyword&track=ais_user&uuid=e309e120-dfa1-4fac-9224-0cb71dcdd604
		// https://kor.pngtree.com/freebackground/tropical-rainforest-cartoon-game-background_2511357.html
		// https://medibang.com/picture/ea1804141350053700005598827/?locale=ko
		// https://kor.pngtree.com/freepng/cute-pink-gradient-slime_7467967.html
		// https://ko.ac-illust.com/search-result/similar/1010060
		// https://ko.ac-illust.com/search/고블린%20몬스터?page=1&color=all&modelCount=-2&orderBy=random&shape=all
		// https://www.google.com/url?sa=i&url=https%3A%2F%2Fm.youtube.com%2Fwatch%3Fv%3DiTELUzw9sbM&psig=AOvVaw3gSjsh2eXSy5MCmaTU1YEv&ust=1716884190369000&source=images&cd=vfe&opi=89978449&ved=0CBIQjhxqFwoTCLCCs5WyrYYDFQAAAAAdAAAAABAE
	}
}
